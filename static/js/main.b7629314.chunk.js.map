{"version":3,"sources":["Components/Checkout.jsx","Components/ProductToast.jsx","actions.js","Components/Products.jsx","Pages/Admin/Product.jsx","Components/LoginModal.jsx","Pages/Admin/Admin.jsx","store.js","Reducers/products.js","index.js","img/philosophy.jpg","img/sociology.jpg","img/aboutMeImg.jpg","img/myDreamImg.jpg","vid/header-loop.mp4"],"names":["loadProducts","dispatch","a","async","process","fetch","baseURL","responseProducts","json","products","console","log","type","payload","Checkout","reloadProducts","amountToCharge","this","props","productsFromServer","id","Card","style","width","Header","Body","Table","hover","borderless","size","onClick","Number","parseFloat","toFixed","toString","Badge","variant","className","createOrder","data","actions","productPurchased","filter","product","qty","map","push","_id","title","order","create","purchase_units","amount","value","onApprove","capture","then","details","alert","payer","name","given_name","method","headers","body","JSON","stringify","orderID","totalAmount","captureDetail","Component","connect","state","showProductToast","hideProductToast","propsForToast","image","message","Toast","show","onClose","delay","autohide","aria-live","aria-atomic","zIndex","position","bottom","left","minHeight","minWidth","src","alt","Products","handleShowProductDetail","setState","showProductDetail","selectedProduct","find","handleCloseProductDetail","componentDidMount","increaseQty","decreaseQty","fetchInProgress","height","color","key","Button","block","OverlayTrigger","overlay","Tooltip","inventory","disabled","icon","faPlus","faMinus","faCartPlus","Img","Footer","price","pill","Modal","onHide","centered","scrollable","closeButton","Title","variety","aroma","taste","description","alcohol","Product","handleChange","event","quantity","target","handleSubmit","e","preventDefault","parseInt","response","myJson","error","Row","Image","rounded","ListGroup","ListGroupItem","Form","onSubmit","Group","Col","xs","Control","onChange","min","max","required","placeholder","LoginModal","useState","setShow","handleClose","Container","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","combinedReducer","combineReducers","action","reduce","acc","createStore","applyMiddleware","thunk","ReactDOM","render","store","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.b7629314.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { PayPalButton } from \"react-paypal-button-v2\";\r\nimport { Card, Table } from \"react-bootstrap\";\r\nimport { Badge } from \"react-bootstrap\";\r\n\r\nconst mapStateToProps = state => state;\r\nconst mapDispatchToProps = dispatch => ({\r\n  loadProducts: () => dispatch(loadProducts())\r\n});\r\nconst loadProducts = () => {\r\n  return async dispatch => {\r\n    const baseURL = process.env.REACT_APP_BASE_URL;\r\n    const responseProducts = await fetch(baseURL + \"/products\");\r\n    const products = await responseProducts.json();\r\n    console.log(\"Testing with checkout\");\r\n    dispatch({\r\n      type: \"LOAD_PRODUCTS\",\r\n      payload: products\r\n    });\r\n  };\r\n};\r\n\r\nclass Checkout extends Component {\r\n  render() {\r\n    let products = null;\r\n    let amountToCharge = 0;\r\n    let reloadProducts;\r\n    if (this.props.products && this.props.products.productsFromServer) {\r\n      products = this.props.products.productsFromServer;\r\n      amountToCharge = this.props.products.amountToCharge;\r\n      reloadProducts = this.props.loadProducts;\r\n    }\r\n\r\n    return (\r\n      <div id=\"checkout\">\r\n        <Card style={{ width: \"350px\" }}>\r\n          <Card.Header>Cart Total</Card.Header>\r\n          <Card.Body>\r\n            <Table hover borderless size=\"sm\">\r\n              <tbody>\r\n                <tr>\r\n                  <td onClick={() => this.props.loadProducts()}>Subtotal: </td>\r\n                  <td>\r\n                    €{\" \"}\r\n                    {Number.parseFloat(amountToCharge)\r\n                      .toFixed(2)\r\n                      .toString()}\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>Shipping: </td>\r\n                  <td>€ 5.90</td>\r\n                  {/* Flat Rate Shipping Costs:  */}\r\n                </tr>\r\n                <tr>\r\n                  <td>Total</td>\r\n                  <td>\r\n                    <Badge variant=\"info\">\r\n                      €{\" \"}\r\n                      {Number.parseFloat(amountToCharge + 5.9)\r\n                        .toFixed(2)\r\n                        .toString()}\r\n                    </Badge>\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </Table>\r\n          </Card.Body>\r\n        </Card>\r\n        <hr />\r\n        <Card style={{ width: \"350px\" }} className=\"mb-4\">\r\n          <Card.Body className=\"p-0 m-2 text-center\">\r\n            <PayPalButton\r\n              createOrder={(data, actions) => {\r\n                let productPurchased = [];\r\n                products\r\n                  .filter(product => product.qty > 0)\r\n                  .map(product =>\r\n                    productPurchased.push({\r\n                      _id: product._id,\r\n                      title: product.title,\r\n                      qty: product.qty\r\n                    })\r\n                  );\r\n\r\n                // This function sets up the details of the transaction, including the amount and line item details.\r\n                return actions.order.create({\r\n                  purchase_units: [\r\n                    {\r\n                      amount: {\r\n                        value: Number.parseFloat(amountToCharge + 5.9)\r\n                          .toFixed(2)\r\n                          .toString()\r\n                      }\r\n                    }\r\n                  ]\r\n                });\r\n              }}\r\n              onApprove={(data, actions) => {\r\n                // This function captures the funds from the transaction.\r\n                return actions.order.capture().then(async function(details) {\r\n                  // This function shows a transaction success message to your buyer.\r\n                  alert(\r\n                    \"Transaction completed by \" + details.payer.name.given_name\r\n                  );\r\n                  // Call your server to save the transaction\r\n                  let productPurchased = [];\r\n                  products\r\n                    .filter(product => product.qty > 0)\r\n                    .map(product =>\r\n                      productPurchased.push({\r\n                        _id: product._id,\r\n                        title: product.title,\r\n                        qty: product.qty\r\n                      })\r\n                    );\r\n                  const baseURL = process.env.REACT_APP_BASE_URL;\r\n                  await fetch(baseURL + \"/purchases\", {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                      \"content-type\": \"application/json\"\r\n                    },\r\n                    body: JSON.stringify({\r\n                      orderID: data.orderID,\r\n                      totalAmount: amountToCharge,\r\n                      products: productPurchased,\r\n                      captureDetail: details\r\n                    })\r\n                  });\r\n                  await reloadProducts();\r\n                  console.log(\"after loading\");\r\n                  // return fetch(\"/paypal-transaction-complete\", {\r\n                  //   method: \"POST\",\r\n                  //   headers: {\r\n                  //     \"content-type\": \"application/json\"\r\n                  //   },\r\n                  //   body: JSON.stringify({ orderID: data.orderID })\r\n                  // });\r\n                });\r\n              }}\r\n            />\r\n          </Card.Body>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Checkout);\r\n","import React from \"react\";\r\nimport { Toast } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { hideProductToast } from \"../actions\";\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    showProductToast: state.products.showProductToast\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  hideProductToast: () => dispatch(hideProductToast())\r\n});\r\n\r\nfunction ProductToast({ propsForToast, showProductToast, hideProductToast }) {\r\n  const { image, message, title, qty } = propsForToast;\r\n\r\n  return (\r\n    <Toast\r\n      show={showProductToast}\r\n      onClose={() => hideProductToast()}\r\n      delay={2000}\r\n      autohide\r\n      aria-live=\"polite\"\r\n      aria-atomic=\"true\"\r\n      style={{\r\n        zIndex: 1,\r\n        position: \"fixed\",\r\n        bottom: \"10px\",\r\n        left: \"10px\",\r\n        minHeight: \"100px\",\r\n        minWidth: \"300px\"\r\n      }}\r\n    >\r\n      <Toast.Header>\r\n        <img\r\n          src={image}\r\n          style={{ width: \"30px\" }}\r\n          className=\"rounded mr-2\"\r\n          alt=\"\"\r\n        />\r\n        <strong className=\"mr-auto\">{title}</strong>\r\n        <small>Quantity: {qty}</small>\r\n      </Toast.Header>\r\n      <Toast.Body>{message}</Toast.Body>\r\n    </Toast>\r\n  );\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductToast);\r\n","export const increaseQty = _id => ({ type: \"INCREASE_QTY\", payload: _id });\r\nexport const decreaseQty = _id => ({ type: \"DECREASE_QTY\", payload: _id });\r\nexport const hideProductToast = _id => ({ type: \"HIDE_PRODUCT_TOAST\" });\r\nexport const loadProducts = () => {\r\n  return async dispatch => {\r\n    const baseURL = process.env.REACT_APP_BASE_URL;\r\n    const responseProducts = await fetch(baseURL + \"/products\");\r\n    const products = await responseProducts.json();\r\n    dispatch({\r\n      type: \"LOAD_PRODUCTS\",\r\n      payload: products\r\n    });\r\n  };\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCartPlus, faPlus, faMinus } from \"@fortawesome/free-solid-svg-icons\";\r\nimport {\r\n  Badge,\r\n  Card,\r\n  Button,\r\n  OverlayTrigger,\r\n  Tooltip,\r\n  Modal,\r\n} from \"react-bootstrap\";\r\nimport Checkout from \"./Checkout\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport { increaseQty, decreaseQty, loadProducts } from \"../actions\";\r\nimport ProductToast from \"./ProductToast\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    products: state.products.productsFromServer,\r\n    fetchInProgress: state.products.fetchInProgress,\r\n    amountToCharge: state.products.amountToCharge,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  loadProducts: () => dispatch(loadProducts()),\r\n  increaseQty: (_id) => dispatch(increaseQty(_id)),\r\n  decreaseQty: (_id) => dispatch(decreaseQty(_id)),\r\n});\r\n\r\nclass Products extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showProductDetail: false,\r\n      propsForToast: {\r\n        image: null,\r\n        message: null,\r\n        title: null,\r\n        qty: 0,\r\n      },\r\n      selectedProduct: {},\r\n    };\r\n  }\r\n  handleShowProductDetail = (id) => {\r\n    this.setState({\r\n      showProductDetail: true,\r\n      selectedProduct: this.props.products.find(\r\n        (product) => product._id === id\r\n      ),\r\n    });\r\n  };\r\n  handleCloseProductDetail = () => {\r\n    this.setState({ showProductDetail: false });\r\n  };\r\n\r\n  render() {\r\n    const { selectedProduct, propsForToast } = this.state;\r\n\r\n    const {\r\n      increaseQty,\r\n      decreaseQty,\r\n      products,\r\n      fetchInProgress,\r\n      amountToCharge,\r\n    } = this.props;\r\n    return (\r\n      <div id=\"wines\">\r\n        {/* Products */}\r\n        {fetchInProgress ? (\r\n          // Loader\r\n          <div\r\n            className=\"d-flex justify-content-center align-items-center\"\r\n            style={{ height: \"50vh\" }}\r\n          >\r\n            <Loader type=\"Puff\" color=\"#00BFFF\" height={100} width={100} />\r\n          </div>\r\n        ) : (\r\n          <section className=\"container-fluid mb-3\">\r\n            <ProductToast propsForToast={propsForToast} />\r\n            <div className=\"row wine-products d-flex justify-content-center bg-white pt-4\">\r\n              {products &&\r\n                products.map((product) => (\r\n                  <div key={product._id} className=\"px-2 pb-2\">\r\n                    <Button\r\n                      variant=\"outline-info\"\r\n                      block\r\n                      className=\"rounded-pill my-2\"\r\n                      onClick={() => this.handleShowProductDetail(product._id)}\r\n                    >\r\n                      {product.title}\r\n                    </Button>\r\n                    <Card className=\"border-0\" style={{ width: \"180px\" }}>\r\n                      <div className=\"ml-auto\">\r\n                        {product.qty > 0 && (\r\n                          <>\r\n                            <OverlayTrigger\r\n                              overlay={\r\n                                <Tooltip id=\"tooltip-disabled\">\r\n                                  {product.inventory === 0\r\n                                    ? \"Last available item added to cart\"\r\n                                    : \"Increase Quantity\"}\r\n                                </Tooltip>\r\n                              }\r\n                            >\r\n                              <span className=\"d-inline-block\">\r\n                                <Button\r\n                                  variant=\"outline-info\"\r\n                                  size=\"sm\"\r\n                                  disabled={\r\n                                    product.inventory === 0 ? true : false\r\n                                  }\r\n                                  onClick={() => {\r\n                                    increaseQty(product._id);\r\n                                    this.setState({\r\n                                      propsForToast: {\r\n                                        image: product.image,\r\n                                        message: `${product.title} added to cart!`,\r\n                                        title: product.title,\r\n                                        qty: product.qty,\r\n                                      },\r\n                                    });\r\n                                  }}\r\n                                  className=\"rounded-circle m-2\"\r\n                                >\r\n                                  <FontAwesomeIcon icon={faPlus} />\r\n                                </Button>\r\n                              </span>\r\n                            </OverlayTrigger>\r\n                            <OverlayTrigger\r\n                              overlay={\r\n                                <Tooltip id=\"tooltip-disabled\">\r\n                                  Decrease Quantity\r\n                                </Tooltip>\r\n                              }\r\n                            >\r\n                              <span className=\"d-inline-block\">\r\n                                <Button\r\n                                  variant=\"outline-info\"\r\n                                  size=\"sm\"\r\n                                  onClick={() => {\r\n                                    decreaseQty(product._id);\r\n                                    this.setState({\r\n                                      propsForToast: {\r\n                                        image: product.image,\r\n                                        message: `${product.title} removed from cart!`,\r\n                                        title: product.title,\r\n                                        qty: product.qty,\r\n                                      },\r\n                                    });\r\n                                  }}\r\n                                  className=\"rounded-circle m-2\"\r\n                                >\r\n                                  <FontAwesomeIcon icon={faMinus} />\r\n                                </Button>\r\n                              </span>\r\n                            </OverlayTrigger>\r\n                          </>\r\n                        )}\r\n                        {product.qty === 0 && (\r\n                          <OverlayTrigger\r\n                            overlay={\r\n                              <Tooltip id=\"tooltip-disabled\">\r\n                                {product.inventory === 0\r\n                                  ? \"Out of stock\"\r\n                                  : \"Add to Cart\"}\r\n                              </Tooltip>\r\n                            }\r\n                          >\r\n                            <span className=\"d-inline-block\">\r\n                              <Button\r\n                                variant=\"outline-info\"\r\n                                size=\"sm\"\r\n                                disabled={\r\n                                  product.inventory === 0 ? true : false\r\n                                }\r\n                                onClick={() => {\r\n                                  increaseQty(product._id);\r\n                                  this.setState({\r\n                                    propsForToast: {\r\n                                      image: product.image,\r\n                                      message: `${product.title} added to cart!`,\r\n                                      title: product.title,\r\n                                      qty: product.qty,\r\n                                    },\r\n                                  });\r\n                                }}\r\n                                className=\"rounded-circle m-2\"\r\n                              >\r\n                                <FontAwesomeIcon icon={faCartPlus} />\r\n                              </Button>\r\n                            </span>\r\n                          </OverlayTrigger>\r\n                        )}\r\n                      </div>\r\n                      <Card.Img variant=\"top\" src={product.image} />\r\n                      <Card.Footer className=\"px-2 text-center\">\r\n                        <div className=\"border border-info rounded-pill mb-2\">\r\n                          € {parseFloat(product.price).toFixed(2)}{\" \"}\r\n                          {product.qty > 0 && (\r\n                            <span>\r\n                              {\" \"}\r\n                              x {product.qty} ={\" \"}\r\n                              <Badge pill variant=\"info\">\r\n                                €{\" \"}\r\n                                {(\r\n                                  parseFloat(product.price) *\r\n                                  parseFloat(product.qty)\r\n                                ).toFixed(2)}\r\n                              </Badge>\r\n                            </span>\r\n                          )}\r\n                        </div>\r\n                        <div className=\"border border-info rounded-pill\">\r\n                          In-stock: {product.inventory}\r\n                        </div>\r\n                      </Card.Footer>\r\n                    </Card>\r\n                    <hr />\r\n                  </div>\r\n                ))}\r\n              {amountToCharge > 0 && <Checkout />}\r\n            </div>\r\n          </section>\r\n        )}\r\n\r\n        <Modal\r\n          show={this.state.showProductDetail}\r\n          onHide={this.handleCloseProductDetail}\r\n          centered\r\n          size=\"xl\"\r\n          scrollable\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>{selectedProduct.title}</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div className=\"card\">\r\n              <div className=\"row no-gutters\">\r\n                <div className=\"col-md-4\">\r\n                  <img\r\n                    src={selectedProduct.image}\r\n                    className=\"card-img\"\r\n                    alt=\"Rice pitcher\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-md-8\">\r\n                  <div className=\"card-body\">\r\n                    <ul className=\"list-group list-group-flush\">\r\n                      <li id=\"variety\" className=\"list-group-item\">\r\n                        Variety: {selectedProduct.variety}\r\n                      </li>\r\n                      <li id=\"color\" className=\"list-group-item\">\r\n                        Color: {selectedProduct.color}\r\n                      </li>\r\n                      <li id=\"aroma\" className=\"list-group-item\">\r\n                        Aroma: {selectedProduct.aroma}\r\n                      </li>\r\n                      <li id=\"taste\" className=\"list-group-item\">\r\n                        The taste is {selectedProduct.taste}\r\n                      </li>\r\n                    </ul>\r\n                    <p id=\"description\" className=\"card-text\">\r\n                      {selectedProduct.description}\r\n                    </p>\r\n                    <p className=\"card-text\">\r\n                      <small id=\"alcohol\" className=\"text-muted\">\r\n                        Alcohol: {selectedProduct.alcohol}\r\n                      </small>\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Modal.Body>\r\n          <Modal.Footer></Modal.Footer>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n  componentDidMount = async () => {\r\n    await this.props.loadProducts();\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Products);\r\n","import React, { Component } from \"react\";\r\n\r\nimport {\r\n  Card,\r\n  ListGroup,\r\n  ListGroupItem,\r\n  Row,\r\n  Image,\r\n  Col,\r\n  Form,\r\n  Button,\r\n  Badge\r\n} from \"react-bootstrap\";\r\n\r\nexport default class Product extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = this.props.product;\r\n  }\r\n  handleChange = event => {\r\n    this.setState({ quantity: event.target.value });\r\n  };\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    let { inventory, _id, quantity } = this.state;\r\n    inventory = parseInt(inventory) + parseInt(quantity);\r\n    inventory = inventory.toString();\r\n    const baseURL = process.env.REACT_APP_BASE_URL;\r\n    try {\r\n      fetch(baseURL + \"/products\", {\r\n        method: \"PUT\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({ id: _id, inventory })\r\n      })\r\n        .then(response => {\r\n          return response.json();\r\n        })\r\n        .then(myJson => {\r\n          this.setState({ quantity: \"\", inventory });\r\n        });\r\n    } catch (error) {\r\n      alert(\"Something went wrong!\");\r\n    }\r\n  };\r\n  render() {\r\n    const { title, image, inventory, quantity } = this.state;\r\n    return (\r\n      <Row>\r\n        <div className=\"col-4 px-0 mb-2\">\r\n          <Image style={{ width: \"100%\" }} src={image} rounded />\r\n        </div>\r\n        <div className=\"col-8 px-0 mb-2\">\r\n          <Card>\r\n            <Card.Body>\r\n              <Card.Title>{title}</Card.Title>\r\n            </Card.Body>\r\n            <ListGroup className=\"list-group-flush\">\r\n              <ListGroupItem>Current Inventory: {inventory}</ListGroupItem>\r\n              <ListGroupItem>\r\n                <Form\r\n                  onSubmit={e => {\r\n                    this.handleSubmit(e);\r\n                  }}\r\n                >\r\n                  <Form.Group>\r\n                    <Row>\r\n                      <Col xs={12} className=\"mb-2\">\r\n                        <Form.Control\r\n                          onChange={this.handleChange}\r\n                          value={quantity}\r\n                          type=\"number\"\r\n                          min=\"1\"\r\n                          max=\"20\"\r\n                          required\r\n                          placeholder=\"New Stock\"\r\n                        />\r\n                      </Col>\r\n                      <Col xs={12}>\r\n                        <Button type=\"submit\" block variant=\"outline-info\">\r\n                          Update\r\n                        </Button>\r\n                      </Col>\r\n                    </Row>\r\n                    <Badge\r\n                      className=\"my-2\"\r\n                      style={{ width: \"100%\" }}\r\n                      pill\r\n                      variant=\"info\"\r\n                    >\r\n                      This will add to current inventory\r\n                    </Badge>\r\n                  </Form.Group>\r\n                </Form>\r\n              </ListGroupItem>\r\n            </ListGroup>\r\n          </Card>\r\n        </div>\r\n      </Row>\r\n    );\r\n  }\r\n  componentDidMount() {\r\n    this.setState({ quantity: \"\" });\r\n  }\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Button, Container } from \"react-bootstrap\";\r\nimport { Modal } from \"react-bootstrap\";\r\n\r\nexport default function LoginModal() {\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n  return (\r\n    <>\r\n      <Container className=\"\">\r\n        <div className=\"vh-100 d-flex justify-content-center align-items-center\">\r\n          <Button variant=\"primary\" onClick={handleShow}>\r\n            Login\r\n          </Button>\r\n        </div>\r\n      </Container>\r\n\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Modal heading</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>Woohoo, you're reading this text in a modal!</Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={handleClose}>\r\n            Save Changes\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport Products from \"./Product\";\r\nimport LoginModal from \"../../Components/LoginModal\";\r\n\r\nexport default class Admin extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { isAuthorized: false };\r\n  }\r\n\r\n  render() {\r\n    const { products } = this.state;\r\n    return this.state.isAuthorized ? (\r\n      <Container className=\"my-2\">\r\n        <div className=\"row\">\r\n          {products &&\r\n            products.map((product) => (\r\n              <div key={product._id} className=\"col-6\">\r\n                <Products product={product} />\r\n              </div>\r\n            ))}\r\n        </div>\r\n      </Container>\r\n    ) : (\r\n      <LoginModal />\r\n    );\r\n  }\r\n  componentDidMount = async () => {\r\n    const baseURL = process.env.REACT_APP_BASE_URL;\r\n    const response = await fetch(baseURL + \"/products\");\r\n    const products = await response.json();\r\n    this.setState({ products });\r\n  };\r\n}\r\n","import { createStore, combineReducers, compose, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport productReducer from \"./Reducers/products\";\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst initialState = {\r\n  products: { fetchInProgress: true, showProductToast: false }\r\n};\r\n\r\nconst combinedReducer = combineReducers({\r\n  products: productReducer\r\n});\r\n\r\nexport default createStore(\r\n  combinedReducer,\r\n  initialState,\r\n  composeEnhancers(applyMiddleware(thunk))\r\n);\r\n","export default (state = {}, action) => {\r\n  const products = state.productsFromServer;\r\n  let product, value;\r\n  switch (action.type) {\r\n    case \"LOAD_PRODUCTS\":\r\n      return {\r\n        productsFromServer: action.payload,\r\n        fetchInProgress: false,\r\n        showProductToast: false\r\n      };\r\n    case \"INCREASE_QTY\":\r\n      product = products.find(product => product._id === action.payload);\r\n      product.qty++;\r\n      product.inventory--;\r\n      value = products.reduce(\r\n        (acc, product) => (acc = acc + product.price * product.qty),\r\n        0\r\n      );\r\n      return {\r\n        ...state,\r\n        productsFromServer: products,\r\n        amountToCharge: value,\r\n        showProductToast: true\r\n      };\r\n    case \"DECREASE_QTY\":\r\n      product = products.find(product => product._id === action.payload);\r\n      product.qty--;\r\n      product.inventory++;\r\n      value = products.reduce(\r\n        (acc, product) => (acc = acc + product.price * product.qty),\r\n        0\r\n      );\r\n      return {\r\n        ...state,\r\n        productsFromServer: products,\r\n        amountToCharge: value,\r\n        showProductToast: true\r\n      };\r\n    case \"HIDE_PRODUCT_TOAST\":\r\n      return {\r\n        ...state,\r\n        showProductToast: false\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  BrowserRouter,\r\n  Switch,\r\n} from \"react-router-dom\";\r\nimport Home from \"./Pages/Home/Home\";\r\nimport Admin from \"./Pages/Admin/Admin\";\r\nimport Header from \"./Components/Header\";\r\nimport contentInEnglish from \"../src/en.json\";\r\nimport contentInGerman from \"../src/de.json\";\r\nimport store from \"./store\";\r\nimport { Provider } from \"react-redux\";\r\nimport PageNotFound from \"./Pages/PageNotFound/PageNotFound\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <Router>\r\n      {true ? (\r\n        <div>Hi</div>\r\n      ) : (\r\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n          <Switch>\r\n            <Route path=\"/admin\" component={Admin} />\r\n            <Route path=\"/en\" exact>\r\n              <Home lang=\"en\" content={contentInEnglish} />\r\n            </Route>\r\n            <Route path=\"/de\" exact>\r\n              <Home lang=\"de\" content={contentInGerman} />\r\n            </Route>\r\n            <Route path=\"/\" exact>\r\n              <Header />\r\n            </Route>\r\n            <Route component={PageNotFound} />\r\n          </Switch>\r\n        </BrowserRouter>\r\n      )}\r\n    </Router>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n","module.exports = __webpack_public_path__ + \"static/media/philosophy.fa68be64.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sociology.d71a8e1e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/aboutMeImg.09f4b4ec.jpg\";","module.exports = __webpack_public_path__ + \"static/media/myDreamImg.ad029bf8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/header-loop.f3bd3584.mp4\";"],"sourceRoot":""}